package convertor

// GetZenMap returns half character to full map
func GetZenMap() WordMap {
	zenMap := make(map[string]string)

	zenMap[" "] = "　"

	zenMap["1"] = "１"
	zenMap["2"] = "２"
	zenMap["3"] = "３"
	zenMap["4"] = "４"
	zenMap["5"] = "５"
	zenMap["6"] = "６"
	zenMap["7"] = "７"
	zenMap["8"] = "８"
	zenMap["9"] = "９"
	zenMap["0"] = "０"

	zenMap["-"] = "－"

	zenMap["a"] = "ａ"
	zenMap["b"] = "ｂ"
	zenMap["c"] = "ｃ"
	zenMap["d"] = "ｄ"
	zenMap["e"] = "ｅ"
	zenMap["f"] = "ｆ"
	zenMap["g"] = "ｇ"
	zenMap["h"] = "ｈ"
	zenMap["i"] = "ｉ"
	zenMap["j"] = "ｊ"
	zenMap["k"] = "ｋ"
	zenMap["l"] = "ｌ"
	zenMap["m"] = "ｍ"
	zenMap["n"] = "ｎ"
	zenMap["o"] = "ｏ"
	zenMap["p"] = "ｐ"
	zenMap["q"] = "ｑ"
	zenMap["r"] = "ｒ"
	zenMap["s"] = "ｓ"
	zenMap["t"] = "ｔ"
	zenMap["u"] = "ｕ"
	zenMap["v"] = "ｖ"
	zenMap["w"] = "ｗ"
	zenMap["x"] = "ｘ"
	zenMap["y"] = "ｙ"
	zenMap["z"] = "ｚ"

	zenMap["A"] = "Ａ"
	zenMap["B"] = "Ｂ"
	zenMap["C"] = "Ｃ"
	zenMap["D"] = "Ｄ"
	zenMap["E"] = "Ｅ"
	zenMap["F"] = "Ｆ"
	zenMap["G"] = "Ｇ"
	zenMap["H"] = "Ｈ"
	zenMap["I"] = "Ｉ"
	zenMap["J"] = "Ｊ"
	zenMap["K"] = "Ｋ"
	zenMap["L"] = "Ｌ"
	zenMap["M"] = "Ｍ"
	zenMap["N"] = "Ｎ"
	zenMap["O"] = "Ｏ"
	zenMap["P"] = "Ｐ"
	zenMap["Q"] = "Ｑ"
	zenMap["R"] = "Ｒ"
	zenMap["S"] = "Ｓ"
	zenMap["T"] = "Ｔ"
	zenMap["U"] = "Ｕ"
	zenMap["V"] = "Ｖ"
	zenMap["W"] = "Ｗ"
	zenMap["X"] = "Ｘ"
	zenMap["Y"] = "Ｙ"
	zenMap["Z"] = "Ｚ"

	return zenMap
}
